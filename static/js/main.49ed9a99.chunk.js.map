{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","components/Footer.js","pages/About.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","htmlFor","type","placeholder","value","onChange","target","checked","currentTarget","Footer","href","About","App","showAddTask","setShowAddTask","setTasks","fetchTasks","a","fetch","res","json","data","fetchTask","useEffect","tasksFromServer","getTasks","addTask","method","headers","body","JSON","stringify","deleteTask","filter","toggleReminder","taskToToggle","updatedTask","path","exact","render","props","length","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.49ed9a99.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nconst Button = ({ color, text, onClick }) => {\r\n\treturn (\r\n\t\t<button\r\n\t\t\tstyle={{ backgroundColor: color }}\r\n\t\t\tclassName='btn'\r\n\t\t\tonClick={onClick}\r\n\t\t>\r\n\t\t\t{text}\r\n\t\t</button>\r\n\t);\r\n};\r\n\r\nButton.defaultProps = {\r\n\tcolor: 'steelBlue',\r\n};\r\n\r\nButton.propTypes = {\r\n\ttext: PropTypes.string,\r\n\tcolor: PropTypes.string,\r\n\tonClick: PropTypes.func,\r\n};\r\n\r\nexport default Button;\r\n","import PropTypes from 'prop-types';\r\nimport Button from './Button';\r\n\r\nconst Header = ({ title, onAdd, showAdd }) => {\r\n\treturn (\r\n\t\t<header className='header'>\r\n\t\t\t<h1>{title}</h1>\r\n\t\t\t<Button\r\n\t\t\t\tcolor={showAdd ? 'red' : 'green'}\r\n\t\t\t\ttext={showAdd ? 'close' : 'Add'}\r\n\t\t\t\tonClick={onAdd}\r\n\t\t\t/>\r\n\t\t</header>\r\n\t);\r\n};\r\n\r\nHeader.defaultProps = {\r\n\ttitle: 'Task Tracker',\r\n};\r\n\r\nHeader.propTypes = {\r\n\ttitle: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Header;\r\n","import { FaTimes } from 'react-icons/fa';\r\n\r\nconst Task = ({ task, onDelete, onToggle }) => {\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName={`task ${task.reminder ? 'reminder' : ''}`}\r\n\t\t\tonDoubleClick={() => onToggle(task.id)}\r\n\t\t>\r\n\t\t\t<h3>\r\n\t\t\t\t{task.text}{' '}\r\n\t\t\t\t<FaTimes\r\n\t\t\t\t\tstyle={{ color: 'red', cursor: 'pointer' }}\r\n\t\t\t\t\tonClick={() => onDelete(task.id)}\r\n\t\t\t\t/>\r\n\t\t\t</h3>\r\n\t\t\t<p>{task.day}</p>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Task;\r\n","import Task from './Task';\r\n\r\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{tasks.map((task) => (\r\n\t\t\t\t<Task\r\n\t\t\t\t\tkey={task.id}\r\n\t\t\t\t\ttask={task}\r\n\t\t\t\t\tonDelete={onDelete}\r\n\t\t\t\t\tonToggle={onToggle}\r\n\t\t\t\t/>\r\n\t\t\t))}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Tasks;\r\n","import { useState } from 'react';\r\n\r\nconst AddTask = ({ onAdd }) => {\r\n\tconst [text, setText] = useState('');\r\n\tconst [day, setDay] = useState('');\r\n\tconst [reminder, setReminder] = useState(false);\r\n\r\n\tconst onSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tif (!text) {\r\n\t\t\talert('Please add task');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tonAdd({ text, day, reminder });\r\n\r\n\t\tsetText('');\r\n\t\tsetDay('');\r\n\t\tsetReminder(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<form className='add-form' onSubmit={onSubmit}>\r\n\t\t\t<div className='form-control'>\r\n\t\t\t\t<label htmlFor=''>Task</label>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype='text'\r\n\t\t\t\t\tplaceholder='add task'\r\n\t\t\t\t\tvalue={text}\r\n\t\t\t\t\tonChange={(e) => setText(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className='form-control'>\r\n\t\t\t\t<label htmlFor=''>Day & Time</label>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype='text'\r\n\t\t\t\t\tplaceholder='add day & time'\r\n\t\t\t\t\tvalue={day}\r\n\t\t\t\t\tonChange={(e) => setDay(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className='form-control form-control-check'>\r\n\t\t\t\t<label htmlFor=''>Set Reminder</label>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype='checkbox'\r\n\t\t\t\t\tchecked={reminder}\r\n\t\t\t\t\tvalue={reminder}\r\n\t\t\t\t\tonChange={(e) => setReminder(e.currentTarget.checked)}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\r\n\t\t\t<input type='submit' value='Save Task' className='btn btn-block' />\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nexport default AddTask;\r\n","const Footer = () => {\r\n\treturn (\r\n\t\t<footer>\r\n\t\t\t<p>Copyright &copy; 2021</p>\r\n\t\t\t<a href='/about'>About</a>\r\n\t\t</footer>\r\n\t);\r\n};\r\n\r\nexport default Footer;\r\n","const About = () => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h4>Version 1.0.0</h4>\r\n\t\t\t<a href='/'>Go Back</a>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default About;\r\n","import { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Header from './components/Header';\nimport Tasks from './components/Tasks';\nimport AddTask from './components/AddTask';\nimport Footer from './components/Footer';\nimport About from './pages/About';\n\nfunction App() {\n\tconst [showAddTask, setShowAddTask] = useState(false);\n\n\tconst [tasks, setTasks] = useState([]);\n\n\tconst fetchTasks = async () => {\n\t\tconst res = await fetch('http://localhost:5000/tasks');\n\t\tconst data = await res.json();\n\n\t\treturn data;\n\t};\n\n\tconst fetchTask = async (id) => {\n\t\tconst res = await fetch(`http://localhost:5000/tasks/${id}`);\n\t\tconst data = await res.json();\n\n\t\treturn data;\n\t};\n\n\tuseEffect(() => {\n\t\tconst getTasks = async () => {\n\t\t\tconst tasksFromServer = await fetchTasks();\n\t\t\tsetTasks(tasksFromServer);\n\t\t};\n\n\t\tgetTasks();\n\t}, []);\n\n\t// add task\n\tconst addTask = async (task) => {\n\t\tconst res = await fetch(`http://localhost:5000/tasks`, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-type': 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify(task),\n\t\t});\n\n\t\tconst data = await res.json();\n\n\t\tsetTasks([...tasks, data]);\n\n\t\t/* const id = Math.floor(Math.random() * 10000) + 1;\n\n\t\tconst newTask = { id, ...task };\n\n\t\tsetTasks([...tasks, newTask]); */\n\t};\n\n\t// delete task\n\tconst deleteTask = async (id) => {\n\t\tawait fetch(`http://localhost:5000/tasks/${id}`, {\n\t\t\tmethod: 'DELETE',\n\t\t});\n\n\t\tsetTasks(tasks.filter((task) => task.id !== id));\n\t};\n\n\t// toggle reminder\n\tconst toggleReminder = async (id) => {\n\t\tconst taskToToggle = await fetchTask(id);\n\t\tconst updatedTask = { ...taskToToggle, reminder: !taskToToggle.reminder };\n\n\t\tconst res = await fetch(`http://localhost:5000/tasks/${id}`, {\n\t\t\tmethod: 'PUT',\n\t\t\theaders: {\n\t\t\t\t'Content-type': 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify(updatedTask),\n\t\t});\n\n\t\tconst data = await res.json();\n\n\t\tsetTasks(\n\t\t\ttasks.map((task) =>\n\t\t\t\ttask.id === id ? { ...task, reminder: data.reminder } : task\n\t\t\t)\n\t\t);\n\t};\n\n\treturn (\n\t\t<Router>\n\t\t\t<div className='container'>\n\t\t\t\t<Header\n\t\t\t\t\tonAdd={() => setShowAddTask(!showAddTask)}\n\t\t\t\t\tshowAdd={showAddTask}\n\t\t\t\t/>\n\n\t\t\t\t<Route\n\t\t\t\t\tpath='/'\n\t\t\t\t\texact\n\t\t\t\t\trender={(props) => (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t{showAddTask && <AddTask onAdd={addTask} />}\n\t\t\t\t\t\t\t{tasks.length > 0 ? (\n\t\t\t\t\t\t\t\t<Tasks\n\t\t\t\t\t\t\t\t\ttasks={tasks}\n\t\t\t\t\t\t\t\t\tonDelete={deleteTask}\n\t\t\t\t\t\t\t\t\tonToggle={toggleReminder}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t'no tasks to show'\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</>\n\t\t\t\t\t)}\n\t\t\t\t/>\n\t\t\t\t<Route path='/about' component={About} />\n\t\t\t\t<Footer />\n\t\t\t</div>\n\t\t</Router>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}